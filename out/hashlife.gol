//   A Life algorithm by Bill Gosper that is designed to take
   advantage of the considerable amount of repetitive behaviour in many
   large patterns of interest.  It provides a means of evolving
   repetitive patterns millions (or even billions or trillions) of
   generations further than normal Life algorithms can manage in a
   reasonable amount of time.
     The hashlife algorithm is described by Gosper in his paper listed
   in the bibliography at the end of this lexicon.  Roughly speaking,
   the idea is to store subpatterns in a hash table so that the results
   of their {evolution} do not need to be recomputed if they arise again
   at some other place or time in the evolution of the full pattern.
   This does, however, mean that complex patterns can require
   substantial amounts of memory.
     Tomas Rokicki and Andrew Trevorrow implemented Hashlife into
   {Golly} in 2005.  See also {macrocell}.

:hassle:  See {hassler}.

:hassler:  An {oscillator} that works by hassling (repeatedly moving or
   changing) some object.  For some examples, see {Jolson},
   {baker's dozen}, {toad-flipper}, {toad-sucker} and {traffic circle}.
   Also see {p24 gun} for a good use of a {traffic light} {hassler}.

:hat: (p1)  Found in 1971.  See also {twinhat} and {sesquihat}.

	..*..
	.*.*.
	.*.*.
	**.**
