//   A pattern whose {population} or {bounding box}
   grows no faster than logarithmically, asymptotic to n.log(t) for some
   constant n.  The first such pattern constructed was the
   {caber tosser} whose population is logarithmic, but whose bounding
   box still grows linearly.  The first pattern whose bounding box and
   population both grow logarithmically was constructed by Jason Summers
   with Gabriel Nivasch in 2003.  For a pattern with a slower growth
   rate than this, see {Osqrtlogt}.

:LoM:  = {lumps of muck}

:lone dot agar:  An {agar} in which every live cell is isolated in every
   generation.  There are many different lone dot agars.  All of them
   are {phoenix}es.  In 1995 Dean Hickerson and Alan W. Hensel found
   stabilizations for finite patches of ten lone dot agars to create
   period 2 oscillators.  One of these is shown below:

	....**..**..**..**..**..**..**..**....
	....*..*.*..*..*.*..*..*.*..*..*.*....
	.....*.......*.......*.......*........
	........*.......*.......*.......*.....
	**..*.*.....*.*.....*.*.....*.*.....**
	*.*.....*.*.....*.*.....*.*.....*.*..*
	....*.......*.......*.......*.......*.
	.*.......*.......*.......*.......*....
	*..*.*.....*.*.....*.*.....*.*.....*.*
	**.....*.*.....*.*.....*.*.....*.*..**
	.....*.......*.......*.......*........
	........*.......*.......*.......*.....
	**..*.*.....*.*.....*.*.....*.*.....**
	*.*.....*.*.....*.*.....*.*.....*.*..*
	....*.......*.......*.......*.......*.
	.*.......*.......*.......*.......*....
	*..*.*.....*.*.....*.*.....*.*.....*.*
	**.....*.*.....*.*.....*.*.....*.*..**
	.....*.......*.......*.......*........
	........*.......*.......*.......*.....
	**..*.*.....*.*.....*.*.....*.*.....**
	*.*.....*.*.....*.*.....*.*.....*.*..*
	....*.......*.......*.......*.......*.
	.*.......*.......*.......*.......*....
	*..*.*.....*.*.....*.*.....*.*.....*.*
	**.....*.*.....*.*.....*.*.....*.*..**
	.....*.......*.......*.......*........
	........*.......*.......*.......*.....
	**..*.*.....*.*.....*.*.....*.*.....**
	*.*.....*.*.....*.*.....*.*.....*.*..*
	....*.......*.......*.......*.......*.
	.*.......*.......*.......*.......*....
	*..*.*.....*.*.....*.*.....*.*.....*.*
	**.....*.*.....*.*.....*.*.....*.*..**
	.....*.......*.......*.......*........
	........*.......*.......*.......*.....
	....*.*..*..*.*..*..*.*..*..*.*..*....
	....**..**..**..**..**..**..**..**....
